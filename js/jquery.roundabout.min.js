




<!DOCTYPE html>
<html class="   ">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    
    
    <title>roundabout/jquery.roundabout.min.js at master Â· fredleblanc/roundabout</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="fredleblanc/roundabout" name="twitter:title" /><meta content="roundabout - A 3D Turntable jQuery Plugin." name="twitter:description" /><meta content="https://avatars3.githubusercontent.com/u/649331?s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars3.githubusercontent.com/u/649331?s=400" property="og:image" /><meta content="fredleblanc/roundabout" property="og:title" /><meta content="https://github.com/fredleblanc/roundabout" property="og:url" /><meta content="roundabout - A 3D Turntable jQuery Plugin." property="og:description" />

    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />

    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="43F666DD:689D:3D94D0:5371A9A0" name="octolytics-dimension-request_id" /><meta content="1106222" name="octolytics-actor-id" /><meta content="b3457m0d3" name="octolytics-actor-login" /><meta content="3e1a5afdf41bcf027d60b92dc2b25da18be44c8341b1eb21968760b242e8137b" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="https://github.global.ssl.fastly.net/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="VbA28mMekno20oD+GieQpwkL64E/1utVhRnUYafXDfL2v29D2O4KCYxlkAT3Tl+vLZzKEwig+d6RHyOpWUuAMg==" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-7f40aa087a17bf6f62858b0c3522304fd0b6d8de.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-1a3c410b868af7031a33d9c381adc57fbdd76b68.css" media="all" rel="stylesheet" type="text/css" />
    


    <meta http-equiv="x-pjax-version" content="f0e1ee830a4f4440cc4cbab51dd513aa">

      
  <meta name="description" content="roundabout - A 3D Turntable jQuery Plugin." />

  <meta content="649331" name="octolytics-dimension-user_id" /><meta content="fredleblanc" name="octolytics-dimension-user_login" /><meta content="2603226" name="octolytics-dimension-repository_id" /><meta content="fredleblanc/roundabout" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="2603226" name="octolytics-dimension-repository_network_root_id" /><meta content="fredleblanc/roundabout" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/fredleblanc/roundabout/commits/master.atom" rel="alternate" title="Recent Commits to roundabout:master" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production macintosh vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/">
  <span class="mega-octicon octicon-mark-github"></span>
</a>

    
    <a href="/notifications" aria-label="You have unread notifications" class="notification-indicator tooltipped tooltipped-s" data-hotkey="g n">
        <span class="mail-status unread"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<div class="commandbar">
  <span class="message"></span>
  <input type="text" data-hotkey="s, /" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="b3457m0d3"
      data-repo="fredleblanc/roundabout"
      data-branch="master"
      data-sha="98edc5dcd641ec8c0cc264ad52daabb6c2d10114"
  >
  <div class="display hidden"></div>
</div>

    <input type="hidden" name="nwo" value="fredleblanc/roundabout" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    


  <ul id="user-links">
    <li>
      <a href="/b3457m0d3" class="name">
        <img alt="Jessie Taylor" class=" js-avatar" data-user="1106222" height="20" src="https://avatars1.githubusercontent.com/u/1106222?s=140" width="20" /> b3457m0d3
      </a>
    </li>

    <li class="new-menu dropdown-toggle js-menu-container">
      <a href="#" class="js-menu-target tooltipped tooltipped-s" aria-label="Create new...">
        <span class="octicon octicon-plus"></span>
        <span class="dropdown-arrow"></span>
      </a>

      <div class="new-menu-content js-menu-content">
      </div>
    </li>

    <li>
      <a href="/settings/profile" id="account_settings"
        class="tooltipped tooltipped-s"
        aria-label="Account settings ">
        <span class="octicon octicon-tools"></span>
      </a>
    </li>
    <li>
      <form class="logout-form" action="/logout" method="post">
        <button class="sign-out-button tooltipped tooltipped-s" aria-label="Sign out">
          <span class="octicon octicon-log-out"></span>
        </button>
      </form>
    </li>

  </ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo-create"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="section-title">
      <span title="fredleblanc/roundabout">This repository</span>
    </li>
      <li>
        <a href="/fredleblanc/roundabout/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

        



      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="iTPty33bWuUJizPGVHo+3ern6ZTBFoQEzE6+36cQ63cC5/rBZ/KFmFPPS/wLZBoo5df0ICDGf0MAdVaQw+ofxA==" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="2603226" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/fredleblanc/roundabout/watchers">
        33
      </a>
      <span class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye-watch"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for conversations in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-watch"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
  

  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/fredleblanc/roundabout/unstar" class="js-toggler-form starred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="9hlcyHS7i5Gs9e8IGG88nuuR0oeJJGC9AbTaNYoqGPucXIp6gjfNs5kPOIScH0psFVoPTIHREyGyB95rIBaVIw==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Unstar this repository" title="Unstar fredleblanc/roundabout">
        <span class="octicon octicon-star-delete"></span><span class="text">Unstar</span>
      </button>
        <a class="social-count js-social-count" href="/fredleblanc/roundabout/stargazers">
          486
        </a>
</form>
    <form accept-charset="UTF-8" action="/fredleblanc/roundabout/star" class="js-toggler-form unstarred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="bfvMO78Okc98CpxV4z5Y4Vdtl3lk6f61Fch9bEHd5iZExNWjdTUlXadg3pqe/JpSOE73tQoCumTro1IyDDZ4ig==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Star this repository" title="Star fredleblanc/roundabout">
        <span class="octicon octicon-star"></span><span class="text">Star</span>
      </button>
        <a class="social-count js-social-count" href="/fredleblanc/roundabout/stargazers">
          486
        </a>
</form>  </div>

  </li>


        <li>
          <a href="/fredleblanc/roundabout/fork" class="minibutton with-count js-toggler-target fork-button lighter tooltipped-n" title="Fork your own copy of fredleblanc/roundabout to your account" aria-label="Fork your own copy of fredleblanc/roundabout to your account" rel="facebox nofollow">
            <span class="octicon octicon-git-branch-create"></span><span class="text">Fork</span>
          </a>
          <a href="/fredleblanc/roundabout/network" class="social-count">98</a>
        </li>


</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/fredleblanc" class="url fn" itemprop="url" rel="author"><span itemprop="title">fredleblanc</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/fredleblanc/roundabout" class="js-current-repository js-repo-home-link">roundabout</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/fredleblanc/roundabout" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /fredleblanc/roundabout">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/fredleblanc/roundabout/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues /fredleblanc/roundabout/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>98</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/fredleblanc/roundabout/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /fredleblanc/roundabout/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>8</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/fredleblanc/roundabout/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /fredleblanc/roundabout/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/fredleblanc/roundabout/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /fredleblanc/roundabout/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Network">
        <a href="/fredleblanc/roundabout/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /fredleblanc/roundabout/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/fredleblanc/roundabout.git" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/fredleblanc/roundabout.git" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:fredleblanc/roundabout.git" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="git@github.com:fredleblanc/roundabout.git" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/fredleblanc/roundabout" readonly="readonly">
    <span class="url-box-clippy">
    <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/fredleblanc/roundabout" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>

  <a href="http://mac.github.com" data-url="github-mac://openRepo/https://github.com/fredleblanc/roundabout" class="minibutton sidebar-button js-conduit-rewrite-url" title="Save fredleblanc/roundabout to your computer and use it in GitHub Desktop." aria-label="Save fredleblanc/roundabout to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>


                <a href="/fredleblanc/roundabout/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download fredleblanc/roundabout as a zip file"
                   title="Download fredleblanc/roundabout as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<a href="/fredleblanc/roundabout/blob/dceb04cbb92e5599b76b8c67fecec85e02cb24a2/jquery.roundabout.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:613baec74d7f4f611d33a2bdaa9eb582 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/fredleblanc/roundabout/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fredleblanc/roundabout/blob/master/jquery.roundabout.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fredleblanc/roundabout/tree/v2.4.2/jquery.roundabout.min.js"
                 data-name="v2.4.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v2.4.2">v2.4.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fredleblanc/roundabout/tree/v2.4.1/jquery.roundabout.min.js"
                 data-name="v2.4.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v2.4.1">v2.4.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fredleblanc/roundabout/tree/v2.4/jquery.roundabout.min.js"
                 data-name="v2.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v2.4">v2.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fredleblanc/roundabout/tree/v2.3/jquery.roundabout.min.js"
                 data-name="v2.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v2.3">v2.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fredleblanc/roundabout/tree/v2.2.1/jquery.roundabout.min.js"
                 data-name="v2.2.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v2.2.1">v2.2.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fredleblanc/roundabout/tree/v2.2/jquery.roundabout.min.js"
                 data-name="v2.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v2.2">v2.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fredleblanc/roundabout/tree/v2.1.1/jquery.roundabout.min.js"
                 data-name="v2.1.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v2.1.1">v2.1.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fredleblanc/roundabout/tree/v2.1/jquery.roundabout.min.js"
                 data-name="v2.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v2.1">v2.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/fredleblanc/roundabout/tree/v2.0/jquery.roundabout.min.js"
                 data-name="v2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v2.0">v2.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/fredleblanc/roundabout" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">roundabout</span></a></span></span><span class="separator"> / </span><strong class="final-path">jquery.roundabout.min.js</strong> <button aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="jquery.roundabout.min.js" data-copied-hint="copied!" type="button"><span class="octicon octicon-clippy"></span></button>
  </div>
</div>


  <div class="commit file-history-tease">
    <img alt="Fred LeBlanc" class="main-avatar js-avatar" data-user="649331" height="24" src="https://avatars0.githubusercontent.com/u/649331?s=140" width="24" />
    <span class="author"><a href="/fredleblanc" rel="author">fredleblanc</a></span>
    <local-time datetime="2012-07-27T10:48:01-04:00" from="now" title-format="%Y-%m-%d %H:%M:%S %z" title="2012-07-27 10:48:01 -0400">July 27, 2012</local-time>
    <div class="commit-title">
        <a href="/fredleblanc/roundabout/commit/c1bcd372f883191894ede850d1a4b2c5dafacd4e" class="message" data-pjax="true" title="Fix #29 - addresses conflict with easing">Fix</a> <a href="https://github.com/fredleblanc/roundabout/issues/29" class="issue-link" title="Roundabout conflicts with Easing.1.3.js">#29</a> <a href="/fredleblanc/roundabout/commit/c1bcd372f883191894ede850d1a4b2c5dafacd4e" class="message" data-pjax="true" title="Fix #29 - addresses conflict with easing">- addresses conflict with easing</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong>  contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Fred LeBlanc" class=" js-avatar" data-user="649331" height="24" src="https://avatars0.githubusercontent.com/u/649331?s=140" width="24" />
            <a href="/fredleblanc">fredleblanc</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
        <span class="meta-divider"></span>
          <span>41 lines (41 sloc)</span>
          <span class="meta-divider"></span>
        <span>17.958 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
            <a class="minibutton tooltipped tooltipped-w js-conduit-openfile-check"
               href="http://mac.github.com"
               data-url="github-mac://openRepo/https://github.com/fredleblanc/roundabout?branch=master&amp;filepath=jquery.roundabout.min.js"
               aria-label="Open this file in GitHub for Mac"
               data-failed-title="Your version of GitHub for Mac is too old to open this file. Try checking for updates.">
                <span class="octicon octicon-device-desktop"></span> Open
            </a>
                <a class="minibutton tooltipped tooltipped-n js-update-url-with-hash"
                   aria-label="Clicking this button will automatically fork this project so you can edit the file"
                   href="/fredleblanc/roundabout/edit/master/jquery.roundabout.min.js"
                   data-method="post" rel="nofollow">Edit</a>
          <a href="/fredleblanc/roundabout/raw/master/jquery.roundabout.min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/fredleblanc/roundabout/blame/master/jquery.roundabout.min.js" class="button minibutton js-update-url-with-hash">Blame</a>
          <a href="/fredleblanc/roundabout/commits/master/jquery.roundabout.min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

            <a class="minibutton danger empty-icon tooltipped tooltipped-s"
               href="/fredleblanc/roundabout/delete/master/jquery.roundabout.min.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">

          Delete
        </a>
      </div><!-- /.actions -->
    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff tab-size-8">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>
<span id="L39" rel="#L39">39</span>
<span id="L40" rel="#L40">40</span>
<span id="L41" rel="#L41">41</span>

            </td>
            <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'><span class="cm">/**</span></div><div class='line' id='LC2'><span class="cm"> * jQuery Roundabout - v2.4.2</span></div><div class='line' id='LC3'><span class="cm"> * http://fredhq.com/projects/roundabout</span></div><div class='line' id='LC4'><span class="cm"> *</span></div><div class='line' id='LC5'><span class="cm"> * Moves list-items of enabled ordered and unordered lists long</span></div><div class='line' id='LC6'><span class="cm"> * a chosen path. Includes the default &quot;lazySusan&quot; path, that</span></div><div class='line' id='LC7'><span class="cm"> * moves items long a spinning turntable.</span></div><div class='line' id='LC8'><span class="cm"> *</span></div><div class='line' id='LC9'><span class="cm"> * Terms of Use // jQuery Roundabout</span></div><div class='line' id='LC10'><span class="cm"> *</span></div><div class='line' id='LC11'><span class="cm"> * Open source under the BSD license</span></div><div class='line' id='LC12'><span class="cm"> *</span></div><div class='line' id='LC13'><span class="cm"> * Copyright (c) 2011-2012, Fred LeBlanc</span></div><div class='line' id='LC14'><span class="cm"> * All rights reserved.</span></div><div class='line' id='LC15'><span class="cm"> *</span></div><div class='line' id='LC16'><span class="cm"> * Redistribution and use in source and binary forms, with or without</span></div><div class='line' id='LC17'><span class="cm"> * modification, are permitted provided that the following conditions are met:</span></div><div class='line' id='LC18'><span class="cm"> *</span></div><div class='line' id='LC19'><span class="cm"> *   - Redistributions of source code must retain the above copyright</span></div><div class='line' id='LC20'><span class="cm"> *     notice, this list of conditions and the following disclaimer.</span></div><div class='line' id='LC21'><span class="cm"> *   - Redistributions in binary form must reproduce the above</span></div><div class='line' id='LC22'><span class="cm"> *     copyright notice, this list of conditions and the following</span></div><div class='line' id='LC23'><span class="cm"> *     disclaimer in the documentation and/or other materials provided</span></div><div class='line' id='LC24'><span class="cm"> *     with the distribution.</span></div><div class='line' id='LC25'><span class="cm"> *   - Neither the name of the author nor the names of its contributors</span></div><div class='line' id='LC26'><span class="cm"> *     may be used to endorse or promote products derived from this</span></div><div class='line' id='LC27'><span class="cm"> *     software without specific prior written permission.</span></div><div class='line' id='LC28'><span class="cm"> *</span></div><div class='line' id='LC29'><span class="cm"> * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &quot;AS IS&quot;</span></div><div class='line' id='LC30'><span class="cm"> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE</span></div><div class='line' id='LC31'><span class="cm"> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE</span></div><div class='line' id='LC32'><span class="cm"> * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE</span></div><div class='line' id='LC33'><span class="cm"> * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR</span></div><div class='line' id='LC34'><span class="cm"> * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF</span></div><div class='line' id='LC35'><span class="cm"> * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS</span></div><div class='line' id='LC36'><span class="cm"> * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN</span></div><div class='line' id='LC37'><span class="cm"> * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)</span></div><div class='line' id='LC38'><span class="cm"> * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span></div><div class='line' id='LC39'><span class="cm"> * POSSIBILITY OF SUCH DAMAGE.</span></div><div class='line' id='LC40'><span class="cm"> */</span></div><div class='line' id='LC41'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">roundaboutShapes</span><span class="o">:</span><span class="p">{</span><span class="nx">def</span><span class="o">:</span><span class="s2">&quot;lazySusan&quot;</span><span class="p">,</span><span class="nx">lazySusan</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">b</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="mi">3</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">/</span><span class="mi">8</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">z</span><span class="o">:</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">cos</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">scale</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sin</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="p">.</span><span class="mi">5</span><span class="p">}}}});</span><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">bearing</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">tilt</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">minZ</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span><span class="nx">maxZ</span><span class="o">:</span><span class="mi">280</span><span class="p">,</span><span class="nx">minOpacity</span><span class="o">:</span><span class="p">.</span><span class="mi">4</span><span class="p">,</span><span class="nx">maxOpacity</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">minScale</span><span class="o">:</span><span class="p">.</span><span class="mi">4</span><span class="p">,</span><span class="nx">maxScale</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">duration</span><span class="o">:</span><span class="mi">600</span><span class="p">,</span><span class="nx">btnNext</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">btnNextCallback</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">btnPrev</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">btnPrevCallback</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">btnToggleAutoplay</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">btnStartAutoplay</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">btnStopAutoplay</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">easing</span><span class="o">:</span><span class="s2">&quot;swing&quot;</span><span class="p">,</span><span class="nx">clickToFocus</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">clickToFocusCallback</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">focusBearing</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">shape</span><span class="o">:</span><span class="s2">&quot;lazySusan&quot;</span><span class="p">,</span><span class="nx">debug</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">childSelector</span><span class="o">:</span><span class="s2">&quot;li&quot;</span><span class="p">,</span><span class="nx">startingChild</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">reflect</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">floatComparisonThreshold</span><span class="o">:</span><span class="p">.</span><span class="mi">001</span><span class="p">,</span><span class="nx">autoplay</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">autoplayDuration</span><span class="o">:</span><span class="mi">1</span><span class="nx">e3</span><span class="p">,</span><span class="nx">autoplayPauseOnHover</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">autoplayCallback</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">autoplayInitialDelay</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">enableDrag</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">dropDuration</span><span class="o">:</span><span class="mi">600</span><span class="p">,</span><span class="nx">dropEasing</span><span class="o">:</span><span class="s2">&quot;swing&quot;</span><span class="p">,</span><span class="nx">dropAnimateTo</span><span class="o">:</span><span class="s2">&quot;nearest&quot;</span><span class="p">,</span><span class="nx">dropCallback</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">dragAxis</span><span class="o">:</span><span class="s2">&quot;x&quot;</span><span class="p">,</span><span class="nx">dragFactor</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">triggerFocusEvents</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">triggerBlurEvents</span><span class="o">:</span><span class="kc">true</span><span class="p">,</span><span class="nx">responsive</span><span class="o">:</span><span class="kc">false</span><span class="p">};</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">autoplayInterval</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">autoplayIsRunning</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">autoplayStartTimeout</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">animating</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">childInFocus</span><span class="o">:-</span><span class="mi">1</span><span class="p">,</span><span class="nx">touchMoveStartPosition</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">stopAnimation</span><span class="o">:</span><span class="kc">false</span><span class="p">,</span><span class="nx">lastAnimationStep</span><span class="o">:</span><span class="kc">false</span><span class="p">};</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">e</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="p">{};</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">f</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">childSelector</span><span class="p">).</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">360</span><span class="o">/</span><span class="nx">c</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">startingChild</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">startingChild</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="nx">c</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">startingChild</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">startingChild</span><span class="o">===</span><span class="kc">null</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">bearing</span><span class="o">:</span><span class="mi">360</span><span class="o">-</span><span class="nx">i</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;position&quot;</span><span class="p">)</span><span class="o">!==</span><span class="s2">&quot;static&quot;</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;position&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;relative&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">padding</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">position</span><span class="o">:</span><span class="nx">k</span><span class="p">}).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;roundabout-holder&quot;</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">h</span><span class="p">,{</span><span class="nx">startingChild</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">bearing</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">oppositeOfFocusBearing</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">normalize</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,[</span><span class="nx">h</span><span class="p">.</span><span class="nx">focusBearing</span><span class="o">-</span><span class="mi">180</span><span class="p">]),</span><span class="nx">dragBearing</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">period</span><span class="o">:</span><span class="nx">e</span><span class="p">}));</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;.roundabout&quot;</span><span class="p">).</span><span class="nx">children</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">childSelector</span><span class="p">).</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;.roundabout&quot;</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">responsive</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nb">window</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">stopAutoplay</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">relayoutChildren</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">)})}}</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">clickToFocus</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">childSelector</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click.roundabout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getPlacement</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="nx">c</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">isInFocus</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="nx">e</span><span class="p">])){</span><span class="nx">d</span><span class="p">.</span><span class="nx">stopAnimation</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">animating</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">animateBearingToFocus</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">clickToFocusCallback</span><span class="p">])}</span><span class="k">return</span> <span class="kc">false</span><span class="p">}})})}</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">btnNext</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">btnNext</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click.roundabout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">animating</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">animateToNextChild</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">btnNextCallback</span><span class="p">])}</span><span class="k">return</span> <span class="kc">false</span><span class="p">})}</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">btnPrev</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">btnPrev</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click.roundabout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">animateToPreviousChild</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">btnPrevCallback</span><span class="p">]);</span><span class="k">return</span> <span class="kc">false</span><span class="p">})}</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">btnToggleAutoplay</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">btnToggleAutoplay</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click.roundabout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">toggleAutoplay</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="kc">false</span><span class="p">})}</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">btnStartAutoplay</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">btnStartAutoplay</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click.roundabout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">startAutoplay</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="kc">false</span><span class="p">})}</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">btnStopAutoplay</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">btnStopAutoplay</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click.roundabout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">stopAutoplay</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="kc">false</span><span class="p">})}</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">autoplayPauseOnHover</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;mouseenter.roundabout.autoplay&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">stopAutoplay</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="kc">true</span><span class="p">])}).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;mouseleave.roundabout.autoplay&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">startAutoplay</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">)})}</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">enableDrag</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">drag</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;You do not have the drag plugin loaded.&quot;</span><span class="p">)}}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">drop</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">debug</span><span class="p">){</span><span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;You do not have the drop plugin loaded.&quot;</span><span class="p">)}}</span><span class="k">else</span><span class="p">{</span><span class="nx">b</span><span class="p">.</span><span class="nx">drag</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">dragAxis</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">===</span><span class="s2">&quot;x&quot;</span><span class="o">?</span><span class="s2">&quot;deltaX&quot;</span><span class="o">:</span><span class="s2">&quot;deltaY&quot;</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">stopAnimation</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">setBearing</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="nx">e</span><span class="p">.</span><span class="nx">dragBearing</span><span class="o">+</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">/</span><span class="nx">e</span><span class="p">.</span><span class="nx">dragFactor</span><span class="p">])}).</span><span class="nx">drop</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getAnimateToMethod</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">dropAnimateTo</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">allowAnimation</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="nx">c</span><span class="p">.</span><span class="nx">dropDuration</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">dropEasing</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">dropCallback</span><span class="p">]);</span><span class="nx">c</span><span class="p">.</span><span class="nx">dragBearing</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">period</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">getNearestChild</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">)})}</span><span class="nx">b</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">get</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">dragAxis</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">===</span><span class="s2">&quot;x&quot;</span><span class="o">?</span><span class="s2">&quot;pageX&quot;</span><span class="o">:</span><span class="s2">&quot;pageY&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getAnimateToMethod</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">dropAnimateTo</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;touchstart&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">touchMoveStartPosition</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="nx">e</span><span class="p">]},</span><span class="kc">false</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;touchmove&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">touches</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="nx">e</span><span class="p">]</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">touchMoveStartPosition</span><span class="p">)</span><span class="o">/</span><span class="nx">c</span><span class="p">.</span><span class="nx">dragFactor</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">stopAnimation</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">));</span><span class="nx">d</span><span class="p">.</span><span class="nx">setBearing</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),[</span><span class="nx">c</span><span class="p">.</span><span class="nx">dragBearing</span><span class="o">+</span><span class="nx">f</span><span class="p">])},</span><span class="kc">false</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;touchend&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">allowAnimation</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">));</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getAnimateToMethod</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">dropAnimateTo</span><span class="p">);</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),[</span><span class="nx">c</span><span class="p">.</span><span class="nx">dropDuration</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">dropEasing</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">dropCallback</span><span class="p">]);</span><span class="nx">c</span><span class="p">.</span><span class="nx">dragBearing</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">period</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">getNearestChild</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">))},</span><span class="kc">false</span><span class="p">)}})}</span><span class="nx">d</span><span class="p">.</span><span class="nx">initChildren</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">])})},</span><span class="nx">initChildren</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">e</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">childSelector</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getPlacement</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">e</span><span class="p">,[</span><span class="nx">b</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">)){</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">startWidth</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">startHeight</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">startFontSize</span><span class="p">}</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;roundabout-moveable-item&quot;</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;position&quot;</span><span class="p">,</span><span class="s2">&quot;absolute&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">,{</span><span class="nx">startWidth</span><span class="o">:</span><span class="nx">f</span><span class="o">||</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">width</span><span class="p">(),</span><span class="nx">startHeight</span><span class="o">:</span><span class="nx">g</span><span class="o">||</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">height</span><span class="p">(),</span><span class="nx">startFontSize</span><span class="o">:</span><span class="nx">h</span><span class="o">||</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;font-size&quot;</span><span class="p">),</span><span class="mi">10</span><span class="p">),</span><span class="nx">degrees</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">backDegrees</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">normalize</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,[</span><span class="nx">i</span><span class="o">-</span><span class="mi">180</span><span class="p">]),</span><span class="nx">childNumber</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">currentScale</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">parent</span><span class="o">:</span><span class="nx">e</span><span class="p">})});</span><span class="nx">d</span><span class="p">.</span><span class="nx">updateChildren</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">autoplay</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">autoplayStartTimeout</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">startAutoplay</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">e</span><span class="p">)},</span><span class="nx">f</span><span class="p">.</span><span class="nx">autoplayInitialDelay</span><span class="p">)}</span><span class="nx">e</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;ready&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">updateChildren</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">bearing</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">bearing</span><span class="p">,</span><span class="nx">tilt</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">tilt</span><span class="p">,</span><span class="nx">stage</span><span class="o">:</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">width</span><span class="p">()</span><span class="o">*</span><span class="p">.</span><span class="mi">9</span><span class="p">),</span><span class="nx">height</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">height</span><span class="p">()</span><span class="o">*</span><span class="p">.</span><span class="mi">9</span><span class="p">)},</span><span class="nx">animating</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">animating</span><span class="p">,</span><span class="nx">inFocus</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">childInFocus</span><span class="p">,</span><span class="nx">focusBearingRadian</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">degToRad</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,[</span><span class="nx">c</span><span class="p">.</span><span class="nx">focusBearing</span><span class="p">]),</span><span class="nx">shape</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">roundaboutShapes</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">shape</span><span class="p">]</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">roundaboutShapes</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">roundaboutShapes</span><span class="p">.</span><span class="nx">def</span><span class="p">]};</span><span class="nx">f</span><span class="p">.</span><span class="nx">midStage</span><span class="o">=</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">stage</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">stage</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">};</span><span class="nx">f</span><span class="p">.</span><span class="nx">nudge</span><span class="o">=</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">midStage</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">stage</span><span class="p">.</span><span class="nx">width</span><span class="o">*</span><span class="p">.</span><span class="mi">05</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">midStage</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">stage</span><span class="p">.</span><span class="nx">height</span><span class="o">*</span><span class="p">.</span><span class="mi">05</span><span class="p">};</span><span class="nx">f</span><span class="p">.</span><span class="nx">zValues</span><span class="o">=</span><span class="p">{</span><span class="nx">min</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">minZ</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">maxZ</span><span class="p">,</span><span class="nx">diff</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">maxZ</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">minZ</span><span class="p">};</span><span class="nx">f</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="p">{</span><span class="nx">min</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">minOpacity</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">maxOpacity</span><span class="p">,</span><span class="nx">diff</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">maxOpacity</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">minOpacity</span><span class="p">};</span><span class="nx">f</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="p">{</span><span class="nx">min</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">minScale</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">maxScale</span><span class="p">,</span><span class="nx">diff</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">maxScale</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">minScale</span><span class="p">};</span><span class="nx">b</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">childSelector</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">updateChild</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;ready&quot;</span><span class="p">)}])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">.</span><span class="nx">animating</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">lastAnimationStep</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;roundabout-in-focus&quot;</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;roundabout-in-focus&quot;</span><span class="p">)}});</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">!==</span><span class="nx">f</span><span class="p">.</span><span class="nx">inFocus</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">triggerBlurEvents</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">childSelector</span><span class="p">).</span><span class="nx">eq</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">inFocus</span><span class="p">).</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;blur&quot;</span><span class="p">)}</span><span class="nx">c</span><span class="p">.</span><span class="nx">childInFocus</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">triggerFocusEvents</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">!==-</span><span class="mi">1</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">childSelector</span><span class="p">).</span><span class="nx">eq</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;focus&quot;</span><span class="p">)}}</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;childrenUpdated&quot;</span><span class="p">)})},</span><span class="nx">updateChild</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="p">[],</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">degToRad</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,[</span><span class="mi">360</span><span class="o">-</span><span class="nx">j</span><span class="p">.</span><span class="nx">degrees</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">bearing</span><span class="p">]);</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">||</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">normalizeRad</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,[</span><span class="nx">l</span><span class="p">]);</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">shape</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">focusBearingRadian</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">tilt</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">scale</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">scale</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">scale</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">adjustedScale</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">min</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">scale</span><span class="p">.</span><span class="nx">diff</span><span class="o">*</span><span class="nx">g</span><span class="p">.</span><span class="nx">scale</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">adjustedScale</span><span class="o">*</span><span class="nx">j</span><span class="p">.</span><span class="nx">startWidth</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">adjustedScale</span><span class="o">*</span><span class="nx">j</span><span class="p">.</span><span class="nx">startHeight</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span><span class="nx">i</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">left</span><span class="o">:</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">x</span><span class="o">*</span><span class="nx">c</span><span class="p">.</span><span class="nx">midStage</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">nudge</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="nx">g</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">y</span><span class="o">*</span><span class="nx">c</span><span class="p">.</span><span class="nx">midStage</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">nudge</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="nx">g</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">opacity</span><span class="p">.</span><span class="nx">min</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">opacity</span><span class="p">.</span><span class="nx">diff</span><span class="o">*</span><span class="nx">g</span><span class="p">.</span><span class="nx">scale</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">2</span><span class="p">),</span><span class="nx">zIndex</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">zValues</span><span class="p">.</span><span class="nx">min</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">zValues</span><span class="p">.</span><span class="nx">diff</span><span class="o">*</span><span class="nx">g</span><span class="p">.</span><span class="nx">z</span><span class="p">),</span><span class="nx">fontSize</span><span class="o">:</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">adjustedScale</span><span class="o">*</span><span class="nx">j</span><span class="p">.</span><span class="nx">startFontSize</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">});</span><span class="nx">j</span><span class="p">.</span><span class="nx">currentScale</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">adjustedScale</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">debug</span><span class="p">){</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s1">&#39;&lt;div style=&quot;font-weight: normal; font-size: 10px; padding: 2px; width: &#39;</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;; background-color: #ffc;&quot;&gt;&#39;</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s1">&#39;&lt;strong style=&quot;font-size: 12px; white-space: nowrap;&quot;&gt;Child &#39;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;&lt;/strong&gt;&lt;br /&gt;&quot;</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;strong&gt;left:&lt;/strong&gt; &quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&lt;br /&gt;&quot;</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;strong&gt;top:&lt;/strong&gt; &quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;top&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&lt;br /&gt;&quot;</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;strong&gt;width:&lt;/strong&gt; &quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&lt;br /&gt;&quot;</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;strong&gt;opacity:&lt;/strong&gt; &quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;opacity&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&lt;br /&gt;&quot;</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;strong&gt;height:&lt;/strong&gt; &quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&lt;br /&gt;&quot;</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;strong&gt;z-index:&lt;/strong&gt; &quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;z-index&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&lt;br /&gt;&quot;</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;strong&gt;font-size:&lt;/strong&gt; &quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;font-size&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;&lt;br /&gt;&quot;</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;strong&gt;scale:&lt;/strong&gt; &quot;</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">currentScale</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;&lt;/div&gt;&quot;</span><span class="p">);</span><span class="nx">i</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">))}</span><span class="nx">i</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;reposition&quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">isInFocus</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">h</span><span class="p">,[</span><span class="nx">j</span><span class="p">.</span><span class="nx">degrees</span><span class="p">])},</span><span class="nx">setBearing</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">normalize</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,[</span><span class="nx">b</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">bearing</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">bearing</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;bearingSet&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">updateChildren</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">i</span><span class="o">-</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">h</span><span class="p">.</span><span class="nx">animating</span><span class="o">||</span><span class="nx">c</span><span class="o">&gt;</span><span class="mi">180</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">i</span><span class="o">-</span><span class="nx">b</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">childSelector</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">isChildBackDegreesBetween</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),[</span><span class="nx">b</span><span class="p">,</span><span class="nx">i</span><span class="p">])){</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;Clockwise&quot;</span><span class="o">:</span><span class="s2">&quot;Counterclockwise&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;move&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;ThroughBack&quot;</span><span class="p">)}})});</span><span class="nx">c</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">adjustBearing</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="kd">function</span><span class="p">(){};</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">setBearing</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),[</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">bearing</span><span class="o">+</span><span class="nx">b</span><span class="p">])});</span><span class="nx">c</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">setTilt</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="kd">function</span><span class="p">(){};</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">tilt</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">updateChildren</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">))});</span><span class="nx">c</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">adjustTilt</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="kd">function</span><span class="p">(){};</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">setTilt</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),[</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">tilt</span><span class="o">+</span><span class="nx">b</span><span class="p">])});</span><span class="nx">c</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">animateToBearing</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">();</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="o">||</span><span class="kd">function</span><span class="p">(){};</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">f</span><span class="p">)){</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">),</span><span class="nx">n</span><span class="o">=!</span><span class="nx">c</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">duration</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">easing</span><span class="o">||</span><span class="s2">&quot;swing&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">timerStart</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">start</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">bearing</span><span class="p">,</span><span class="nx">totalTime</span><span class="o">:</span><span class="nx">n</span><span class="p">}}</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="o">-</span><span class="nx">f</span><span class="p">.</span><span class="nx">timerStart</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">stopAnimation</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">allowAnimation</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">animating</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">return</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="p">.</span><span class="nx">animating</span><span class="p">){</span><span class="nx">l</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;animationStart&quot;</span><span class="p">)}</span><span class="nx">m</span><span class="p">.</span><span class="nx">animating</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">easing</span><span class="p">.</span><span class="nx">def</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">){</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">easing</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">easing</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">easing</span><span class="p">.</span><span class="nx">def</span><span class="p">];</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">start</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="nx">f</span><span class="p">.</span><span class="nx">start</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">totalTime</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">easing</span><span class="p">[</span><span class="nx">o</span><span class="p">](</span><span class="nx">i</span><span class="o">/</span><span class="nx">f</span><span class="p">.</span><span class="nx">totalTime</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">start</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="nx">f</span><span class="p">.</span><span class="nx">start</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">totalTime</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">compareVersions</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,[</span><span class="nx">a</span><span class="p">().</span><span class="nx">jquery</span><span class="p">,</span><span class="s2">&quot;1.7.2&quot;</span><span class="p">])</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">easing</span><span class="p">[</span><span class="s2">&quot;easeOutBack&quot;</span><span class="p">]){</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">start</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">f</span><span class="p">.</span><span class="nx">start</span><span class="p">)</span><span class="o">*</span><span class="nx">k</span><span class="p">}</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">normalize</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,[</span><span class="nx">k</span><span class="p">]);</span><span class="nx">m</span><span class="p">.</span><span class="nx">dragBearing</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">setBearing</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,[</span><span class="nx">k</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">animateToBearing</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,[</span><span class="nx">b</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">])},</span><span class="mi">0</span><span class="p">)}])}</span><span class="k">else</span><span class="p">{</span><span class="nx">m</span><span class="p">.</span><span class="nx">lastAnimationStep</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">normalize</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,[</span><span class="nx">b</span><span class="p">]);</span><span class="nx">d</span><span class="p">.</span><span class="nx">setBearing</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">,[</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;animationEnd&quot;</span><span class="p">)}]);</span><span class="nx">m</span><span class="p">.</span><span class="nx">animating</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">m</span><span class="p">.</span><span class="nx">lastAnimationStep</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="nx">m</span><span class="p">.</span><span class="nx">dragBearing</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">l</span><span class="p">)}});</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">animateToNearbyChild</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="kd">function</span><span class="p">(){};</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">f</span><span class="p">)){</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">),</span><span class="nx">k</span><span class="o">=!</span><span class="nx">j</span><span class="p">.</span><span class="nx">reflect</span><span class="o">?</span><span class="nx">j</span><span class="p">.</span><span class="nx">bearing</span><span class="o">%</span><span class="mi">360</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">bearing</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">childSelector</span><span class="p">).</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">j</span><span class="p">.</span><span class="nx">animating</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">reflect</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;previous&quot;</span><span class="o">||!</span><span class="nx">j</span><span class="p">.</span><span class="nx">reflect</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;next&quot;</span><span class="p">){</span><span class="nx">k</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">.</span><span class="nx">floatComparisonThreshold</span><span class="o">?</span><span class="mi">360</span><span class="o">:</span><span class="nx">k</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">b</span><span class="o">+=</span><span class="mi">1</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">lower</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">period</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="nx">upper</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">period</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">)};</span><span class="nx">h</span><span class="p">.</span><span class="nx">upper</span><span class="o">=</span><span class="nx">b</span><span class="o">===</span><span class="nx">l</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="mi">360</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">upper</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">&lt;=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">upper</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">&gt;=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">lower</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">===</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">===</span><span class="mi">360</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">animateToDelta</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">i</span><span class="p">,[</span><span class="o">-</span><span class="mi">180</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">])}</span><span class="k">else</span><span class="p">{</span><span class="nx">d</span><span class="p">.</span><span class="nx">animateBearingToFocus</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">i</span><span class="p">,[</span><span class="nx">h</span><span class="p">.</span><span class="nx">lower</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">])}</span><span class="k">break</span><span class="p">}}}</span><span class="k">else</span><span class="p">{</span><span class="nx">k</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">.</span><span class="nx">floatComparisonThreshold</span><span class="o">||</span><span class="mi">360</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">j</span><span class="p">.</span><span class="nx">floatComparisonThreshold</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">k</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">l</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">-=</span><span class="mi">1</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">lower</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">period</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="nx">upper</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">period</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">)};</span><span class="nx">h</span><span class="p">.</span><span class="nx">upper</span><span class="o">=</span><span class="nx">b</span><span class="o">===</span><span class="nx">l</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="mi">360</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">upper</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">&gt;=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">lower</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">upper</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">===</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">===</span><span class="mi">360</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">animateToDelta</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">i</span><span class="p">,[</span><span class="mi">180</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">])}</span><span class="k">else</span><span class="p">{</span><span class="nx">d</span><span class="p">.</span><span class="nx">animateBearingToFocus</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">i</span><span class="p">,[</span><span class="nx">h</span><span class="p">.</span><span class="nx">upper</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">])}</span><span class="k">break</span><span class="p">}}}}})},</span><span class="nx">animateToNearestChild</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="kd">function</span><span class="p">(){};</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getNearestChild</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">));</span><span class="nx">d</span><span class="p">.</span><span class="nx">animateToChild</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),[</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">])})},</span><span class="nx">animateToChild</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">||</span><span class="kd">function</span><span class="p">(){};</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">childInFocus</span><span class="o">!==</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="nx">i</span><span class="p">.</span><span class="nx">animating</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">childSelector</span><span class="p">).</span><span class="nx">eq</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">animateBearingToFocus</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">h</span><span class="p">,[</span><span class="nx">g</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">degrees</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">])}})},</span><span class="nx">animateToNextChild</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">animateToNearbyChild</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,[</span><span class="nx">arguments</span><span class="p">,</span><span class="s2">&quot;next&quot;</span><span class="p">])},</span><span class="nx">animateToPreviousChild</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">animateToNearbyChild</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,[</span><span class="nx">arguments</span><span class="p">,</span><span class="s2">&quot;previous&quot;</span><span class="p">])},</span><span class="nx">animateToDelta</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">||</span><span class="kd">function</span><span class="p">(){};</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">bearing</span><span class="o">+</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">animateToBearing</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),[</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">])})},</span><span class="nx">animateBearingToFocus</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="o">||</span><span class="kd">function</span><span class="p">(){};</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">e</span><span class="p">)){</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">bearing</span><span class="o">-</span><span class="nx">b</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="mi">360</span><span class="o">-</span><span class="nx">g</span><span class="p">)</span><span class="o">&lt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">?</span><span class="mi">360</span><span class="o">-</span><span class="nx">g</span><span class="o">:-</span><span class="nx">g</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="o">&gt;</span><span class="mi">180</span><span class="o">?-</span><span class="p">(</span><span class="mi">360</span><span class="o">-</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">animateToDelta</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),[</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">])}})},</span><span class="nx">stopAnimation</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">stopAnimation</span><span class="o">=</span><span class="kc">true</span><span class="p">})},</span><span class="nx">allowAnimation</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">stopAnimation</span><span class="o">=</span><span class="kc">false</span><span class="p">})},</span><span class="nx">startAutoplay</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">autoplayCallback</span><span class="o">||</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">autoplayInterval</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">autoplayInterval</span><span class="o">=</span><span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">animateToNextChild</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">,[</span><span class="nx">b</span><span class="p">])},</span><span class="nx">e</span><span class="p">.</span><span class="nx">autoplayDuration</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">autoplayIsRunning</span><span class="o">=</span><span class="kc">true</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;autoplayStart&quot;</span><span class="p">)})},</span><span class="nx">stopAutoplay</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">clearInterval</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">autoplayInterval</span><span class="p">);</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">autoplayInterval</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">autoplayIsRunning</span><span class="o">=</span><span class="kc">false</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;.autoplay&quot;</span><span class="p">)}</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;autoplayStop&quot;</span><span class="p">)})},</span><span class="nx">toggleAutoplay</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">autoplayCallback</span><span class="o">||</span><span class="kd">function</span><span class="p">(){};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">isAutoplaying</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">))){</span><span class="nx">d</span><span class="p">.</span><span class="nx">startAutoplay</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),[</span><span class="nx">b</span><span class="p">])}</span><span class="k">else</span><span class="p">{</span><span class="nx">d</span><span class="p">.</span><span class="nx">stopAutoplay</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),[</span><span class="nx">b</span><span class="p">])}})},</span><span class="nx">isAutoplaying</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">autoplayIsRunning</span><span class="p">},</span><span class="nx">changeAutoplayDuration</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">autoplayDuration</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">isAutoplaying</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">)){</span><span class="nx">d</span><span class="p">.</span><span class="nx">stopAutoplay</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">startAutoplay</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">)},</span><span class="mi">10</span><span class="p">)}})},</span><span class="nx">normalize</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">%</span><span class="mi">360</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="mi">360</span><span class="o">+</span><span class="nx">b</span><span class="o">:</span><span class="nx">b</span><span class="p">},</span><span class="nx">normalizeRad</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">while</span><span class="p">(</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">a</span><span class="o">+=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">*</span><span class="mi">2</span><span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="nx">a</span><span class="o">&gt;</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">*</span><span class="mi">2</span><span class="p">){</span><span class="nx">a</span><span class="o">-=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">*</span><span class="mi">2</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">isChildBackDegreesBetween</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">backDegrees</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="o">&gt;=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&gt;=</span><span class="nx">b</span><span class="p">}},</span><span class="nx">getAnimateToMethod</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;next&quot;</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;animateToNextChild&quot;</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;previous&quot;</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;animateToPreviousChild&quot;</span><span class="p">}</span><span class="k">return</span><span class="s2">&quot;animateToNearestChild&quot;</span><span class="p">},</span><span class="nx">relayoutChildren</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">));</span><span class="nx">c</span><span class="p">.</span><span class="nx">startingChild</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">).</span><span class="nx">childInFocus</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">init</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="nx">c</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">true</span><span class="p">])})},</span><span class="nx">getNearestChild</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">childSelector</span><span class="p">).</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">reflect</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">bearing</span><span class="o">/</span><span class="nx">c</span><span class="p">.</span><span class="nx">period</span><span class="p">)</span><span class="o">%</span><span class="nx">d</span><span class="p">)</span><span class="o">%</span><span class="nx">d</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">bearing</span><span class="o">/</span><span class="nx">c</span><span class="p">.</span><span class="nx">period</span><span class="p">)</span><span class="o">%</span><span class="nx">d</span><span class="p">}},</span><span class="nx">degToRad</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">normalize</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,[</span><span class="nx">a</span><span class="p">])</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="o">/</span><span class="mi">180</span><span class="p">},</span><span class="nx">getPlacement</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">reflect</span><span class="o">?</span><span class="mi">360</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">period</span><span class="o">*</span><span class="nx">a</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">period</span><span class="o">*</span><span class="nx">a</span><span class="p">},</span><span class="nx">isInFocus</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">normalize</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,[</span><span class="nx">e</span><span class="p">.</span><span class="nx">bearing</span><span class="p">]);</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">normalize</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="kc">null</span><span class="p">,[</span><span class="nx">a</span><span class="p">]);</span><span class="nx">b</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">&lt;=</span><span class="nx">e</span><span class="p">.</span><span class="nx">floatComparisonThreshold</span><span class="o">||</span><span class="nx">b</span><span class="o">&gt;=</span><span class="mi">360</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">floatComparisonThreshold</span><span class="p">},</span><span class="nx">getChildInFocus</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;roundabout&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">childInFocus</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">childInFocus</span><span class="o">:</span><span class="kc">false</span><span class="p">},</span><span class="nx">compareVersions</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\./i</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\./i</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;=</span><span class="nx">f</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="mi">10</span><span class="p">)</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span> <span class="mi">1</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="mi">10</span><span class="p">)</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">===</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">]){</span><span class="k">continue</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">]){</span><span class="k">if</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="mi">10</span><span class="p">)</span><span class="o">&gt;</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="mi">10</span><span class="p">)){</span><span class="k">return</span> <span class="mi">1</span><span class="p">}</span><span class="k">else</span><span class="p">{</span><span class="k">return</span><span class="o">-</span><span class="mi">1</span><span class="p">}}}</span><span class="k">return</span> <span class="mi">0</span><span class="p">}};</span><span class="nx">a</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">roundabout</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]){</span><span class="k">return</span> <span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">))}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||!</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">init</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="s2">&quot;Method &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; does not exist for jQuery.roundabout.&quot;</span><span class="p">)}}})(</span><span class="nx">jQuery</span><span class="p">)</span></div></pre></div></td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.04661s from github-fe135-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close js-ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/frameworks-0761ba432b838d086e553e65a1be483eca0cba97.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/github-320bd0f5b22fb60db7de2f691e6a8956971f5da2.js" type="text/javascript"></script>
      
      
  </body>
</html>

